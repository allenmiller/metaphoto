AWSTemplateFormatVersion: '2010-09-09'
Description: Shared infrastructure for Metaphoto, including build pipelines, dynamodb tables, S3 buckets, and IAM roles

Parameters:
  Environment:
    AllowedValues:
      - dev
      - prod
    Description: 'Environment'
    Type: 'String'
    Default: 'dev'

  GitHubOAuthToken:
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: '[a-z0-9]*'

  GitHubOwner:
    Type: String
    Default: allenmiller
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubRepo:
    Type: String
    Default: metaphoto
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubBranch:
    Type: String
    Default: master
    AllowedPattern: "[A-Za-z0-9-]+"

  ApplicationStackName:
    Type: String
    Default: metaphoto
    AllowedPattern: "[A-Za-z0-9-]+"

Resources:
  MetaphotoPipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  DynamoDbCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: DynamoDbCodeBuildProject
      Description: Build the DynamoDB database.
      ServiceRole: !Ref DynamoDbCodeBuildRole
      TimeoutInMinutes: 5
      Source:
        Type: CODEPIPELINE
        BuildSpec: resources/dynamodb/buildspec.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.1.0
      Artifacts:
        Type: CODEPIPELINE

  TimeLambdaCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: TimeLambdaCodeBuildProject
      Description: Set up the time lambda
      ServiceRole: !Ref LambdaCodeBuildRole
      TimeoutInMinutes: 5
      Source:
        Type: CODEPIPELINE
        BuildSpec: services/time/buildspec.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.1.0
      Artifacts:
        Type: CODEPIPELINE

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref MetaphotoPipelineArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: !Ref GitHubOAuthToken
              RunOrder: 1

        - Name: DeployDatabase
          Actions:
            - Name: BuildDynamoDatabase
              RunOrder: 1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceCode
              Configuration:
                ProjectName: !Ref DynamoDbCodeBuildProject

        - Name: DeployTimeLambda
          Actions:
            - Name: DeployTimeLambda
              RunOrder: 2
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceCode
              Configuration:
                ProjectName: !Ref TimeLambdaCodeBuildProject

  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: 'true'
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version

  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        'Fn::Join': [ "", ["CodeBuildRole", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: "codebuild.amazonaws.com"
          Action: "sts:AssumeRole"

  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Join [ "-", ["CodePipelineRole", !Ref 'AWS::StackName', !Ref 'Environment']]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: "codepipeline.amazonaws.com"
          Action: "sts:AssumeRole"

  DynamoDbCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join [ "-", ["DynamoDbCodeBuildRole", !Ref "AWS::StackName"] ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: "codebuild.amazonaws.com"
          Action: "sts:AssumeRole"

  LambdaCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join [ "-", ["LambdaCodeBuildRole", !Ref "AWS::StackName"] ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: "codebuild.amazonaws.com"
          Action: "sts:AssumeRole"

  DynamoDBCodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join [ "-", ["DynamoDbCodeBuildPolicy", !Ref "AWS::StackName"] ]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - DynamoDB:CreateTable
            - DynamoDB:DescribeTable
            - DynamoDB:TagResource
          Resource: "*"
      Roles:
        - !Ref DynamoDbCodeBuildRole

  LoggingPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        'Fn::Join': [ "", ["LoggingPolicy", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogGroups
            - logs:FilterLogEvents
            - logs:DescribeLogStreams
            - logs:DeleteLogGroup
          Resource: "*"
      Roles:
        - !Ref DynamoDbCodeBuildRole
        - !Ref LambdaCodeBuildRole

  CodebuildCloudformationPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        'Fn::Join': [ "", ["CodebuildCloudformationPolicy", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - Cloudformation:DescribeStacks
            - Cloudformation:DescribeStackEvents
            - Cloudformation:DescribeStackResource
            - Cloudformation:ListStackResources
            - Cloudformation:ValidateTemplate
            - Cloudformation:CreateStack
            - Cloudformation:CreateUploadBucket
            - Cloudformation:DeleteStack
            - Cloudformation:UpdateStack
          Resource: "*"
      Roles:
        - !Ref DynamoDbCodeBuildRole
        - !Ref LambdaCodeBuildRole

  S3PutGetPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName:
        'Fn::Join': [ "", ["S3PutGetPolicy", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - S3:ListBucket
            - S3:GetBucketLocation
            - S3:GetObject
            - S3:PutObject
          Resource: "*"
      Roles:
        - !Ref DynamoDbCodeBuildRole
        - !Ref LambdaCodeBuildRole

# S3CreatePolicy:
#    Type: "AWS::IAM::Policy"
#    Properties:
#      PolicyName:
#        'Fn::Join': [ "", ["S3CreatePolicy", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
#      PolicyDocument:
#        Version: "2012-10-17"
#        Statement:
#          Effect: Allow
#          Action:
#            - S3:CreateBucket
#            - S3:PutEncryptionConfiguration
#          Resource: "*"
#      Roles:
#        - !Ref DynamoDbCodeBuildRole

  LambdaCodeBuildPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName:
        'Fn::Join': [ "", ["LambdaCodeBuildPolicy", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - lambda:Get*
            - lambda:List*
            - lambda:CreateFunction
            - lambda:AddPermission
            - lambda:CreateAlias
            - lambda:DeleteFunction
            - lambda:InvokeFunction
            - lambda:PublishVersion
            - lambda:RemovePermission
          Resource: "*"
      Roles:
        - !Ref LambdaCodeBuildRole

  CodeBuildPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName:
        'Fn::Join': [ "", ["CodeBuildPolicy", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - codebuild:*
            - apigateway:GET
            - apigateway:POST
            - apigateway:PUT
            - apigateway:DELETE
            - s3:DeleteBucket
            - s3:ListBucketVersions
            - iam:PassRole
            - iam:GetRole
            - iam:CreateRole
            - iam:PutRolePolicy
            - iam:DeleteRolePolicy
            - iam:DeleteRole
            - cloudwatch:GetMetricStatistics
            - events:Put*
            - events:Remove*
            - events:Delete*
          Resource: "*"
      Roles:
        - !Ref CodeBuildRole

  CodePipelinePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName:
        'Fn::Join': [ "", ["CodePipelinePolicy", "-", !Ref 'AWS::StackName', "-", !Ref 'Environment']]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - s3:*
            - codebuild:*
          Resource:
            - "*"
      Roles:
        - !Ref CodePipelineRole

Outputs:
  MetaphotoPipelineArtifactsBucket:
    Description: Bucket to hold build artifacts
    Value: !Ref MetaphotoPipelineArtifactsBucket
    Export:
      Name: MetaphotoPipelineArtifactsBucket
